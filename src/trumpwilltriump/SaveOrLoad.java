package trumpwilltriump;

import java.io.BufferedOutputStream;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;

import static java.nio.file.StandardOpenOption.TRUNCATE_EXISTING;
import static java.nio.file.StandardOpenOption.WRITE;

/**
 * Provides the save and load mechanisms for saving the current game status to file, and loading the status from file.
 */
class SaveOrLoad {

    static String[] load() {
        String saveFile = null;
        try {
            Files.createFile(TrumpWillTriump.FILE);
        } catch (FileAlreadyExistsException x) {
            try (InputStream in = Files.newInputStream(TrumpWillTriump.FILE);
                 BufferedReader reader = new BufferedReader(new InputStreamReader(in))) {
                String line;
                while ((line = reader.readLine()) != null) {
                    saveFile = line;
                }
            } catch (IOException e) {
                System.err.println("Error in SaveOrLoad.load: could not open file.");
            }
        } catch (IOException x) {
            System.err.println("Error in SaveOrLoad.load: could not create file.");
        } finally {
            if (isFileNonExistent(saveFile)) {
                saveFile = defaultFile();
            }
        }
        return saveFile.split("\\s+");
    }

    private static boolean isFileNonExistent(String file) {
        return file == null;
    }

    private static String defaultFile() {
        return "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 "
                + "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 "
                + "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 "
                + "0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 "
                + "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 "
                + "0 0 0 0 0 0 0 0 0 0 0 1 91 1 0 0 0 "
                + "0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 "
                + "0 0 0 0 0 0 0 0 0 0 1 91 91 1 0 0 0 "
                + "0 0 0 0 0 1 52 52 52 52 52 52 52 1 55 55 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 "
                + "0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 91 91 91 1 0 0 "
                + "0 0 0 0 0 1 52 52 52 52 52 52 52 1 55 55 1 59 59 59 59 59 59 59 59 1 63 63 63 63 1 69 69 69 1 "
                + "0 0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 91 91 91 91 1 0 "
                + "0 0 0 0 0 1 52 52 52 52 52 52 52 1 55 55 1 59 59 59 59 59 59 59 59 1 63 63 63 63 1 69 69 69 1 "
                + "0 1 74 1 0 1 77 77 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 91 91 91 91 1 0 "
                + "0 0 0 0 0 1 52 52 52 52 52 52 52 1 55 55 1 59 59 59 59 59 59 59 59 1 63 63 63 63 1 69 69 69 1 "
                + "1 74 74 74 1 77 77 1 0 0 0 0 0 0 0 0 0 1 92 92 92 92 1 1 91 91 91 1 0 "
                + "0 0 0 0 0 1 1 1 1 1 1 1 1 1 55 55 1 59 59 59 59 59 59 59 59 1 1 1 1 1 1 69 69 69 1 74 74 74 74 "
                + "1 77 1 0 0 1 0 0 0 0 0 0 1 85 1 92 92 1 93 93 1 1 1 0 0 "
                + "0 0 0 0 0 1 53 53 53 53 53 53 53 1 55 55 1 59 59 59 59 59 59 59 59 1 64 64 64 64 1 69 69 69 1 "
                + "74 74 74 74 1 1 0 0 1 77 1 0 0 0 0 1 85 85 85 1 92 1 93 93 93 1 0 0 0 "
                + "0 0 0 0 0 1 53 53 53 53 53 53 53 1 55 55 55 1 1 1 1 1 1 1 1 1 64 64 64 64 1 69 69 69 1 74 74 "
                + "74 74 1 0 0 0 1 77 1 0 0 0 0 1 85 85 85 1 1 1 1 1 1 0 0 0 0 "
                + "0 0 0 0 0 1 53 53 53 53 53 53 53 1 55 55 55 55 55 1 60 60 60 60 1 64 64 64 64 64 1 69 69 69 "
                + "69 1 74 74 74 1 0 0 1 77 77 1 0 0 0 1 85 85 85 85 1 94 94 94 1 0 0 0 0 0 "
                + "0 0 0 0 1 53 53 53 53 53 53 53 53 1 55 55 55 55 55 1 60 60 60 60 1 64 64 64 64 64 1 1 1 1 1 1 "
                + "74 74 74 1 0 0 1 77 77 1 0 0 1 85 85 85 85 85 1 1 1 1 1 0 0 0 0 0 "
                + "0 0 0 0 1 1 1 1 1 1 1 1 1 1 55 55 55 55 55 1 60 60 60 60 1 1 1 1 1 1 1 70 70 70 70 1 1 1 1 1 "
                + "0 1 77 77 1 0 0 1 1 1 1 1 1 1 1 96 1 95 1 0 0 0 0 0 "
                + "0 0 0 0 1 54 54 54 1 56 56 56 56 56 1 1 1 1 1 1 60 60 60 60 1 65 65 65 65 65 65 1 70 70 70 1 "
                + "75 75 75 75 1 1 1 1 1 1 1 1 86 86 86 86 86 86 1 1 1 1 0 0 0 0 0 0 "
                + "0 0 0 0 1 54 54 54 1 56 56 56 56 56 56 1 57 57 57 1 60 60 60 60 1 65 65 65 65 65 65 1 70 70 "
                + "70 1 75 75 75 75 1 78 78 1 82 82 82 1 86 86 86 86 86 1 97 97 1 0 0 0 0 0 0 0 "
                + "0 0 0 0 1 54 54 54 1 56 56 56 56 56 56 1 57 57 57 1 1 1 1 1 1 1 1 1 65 65 65 1 1 1 1 1 75 75 "
                + "75 75 1 78 78 1 82 82 82 1 86 86 1 1 1 1 97 1 0 0 0 0 0 0 0 0 "
                + "0 0 0 0 1 54 54 54 1 56 56 56 56 56 56 1 57 57 57 57 57 1 61 61 61 61 61 1 65 65 65 1 71 71 "
                + "71 71 1 75 75 75 1 78 78 1 82 82 82 1 1 1 99 99 99 1 1 1 0 0 0 0 0 0 0 0 "
                + "0 0 0 0 1 54 54 54 54 1 56 56 56 56 56 1 57 57 57 57 57 1 61 61 61 61 61 1 1 1 1 1 1 71 71 71 "
                + "1 75 75 1 78 78 78 1 1 82 1 87 87 87 1 99 99 1 98 1 0 0 0 0 0 0 0 0 "
                + "0 0 0 0 1 54 54 54 54 54 1 56 56 56 56 1 57 57 57 57 57 1 61 61 61 61 61 1 66 66 66 66 1 71 "
                + "71 71 71 1 75 1 78 78 78 1 79 1 87 87 87 1 88 1 1 1 1 1 0 0 0 0 0 0 0 0 "
                + "0 0 0 0 0 1 54 54 54 54 54 1 56 56 56 1 57 57 57 57 57 1 61 61 61 61 61 1 66 66 66 66 1 71 "
                + "71 71 71 1 75 1 1 1 1 79 79 79 1 87 87 1 88 88 88 88 88 1 0 0 0 0 0 0 0 0 "
                + "0 0 0 0 0 1 54 54 54 54 54 1 56 56 56 1 57 57 57 57 57 1 61 61 61 61 61 1 66 66 66 66 66 1 "
                + "71 71 71 1 1 79 79 79 79 79 79 79 1 1 1 88 88 88 88 88 88 1 0 0 0 0 0 0 0 0 "
                + "0 0 0 0 0 1 54 54 54 54 54 1 56 56 56 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 71 71 71 1 79 79 "
                + "79 79 79 79 79 1 88 88 88 88 88 88 88 88 1 0 0 0 0 0 0 0 0 0 "
                + "0 0 0 0 0 0 1 54 54 54 54 54 1 56 56 1 58 58 58 1 62 62 62 62 62 1 67 67 67 67 67 67 67 1 1 1 "
                + "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 "
                + "0 0 0 0 0 0 1 54 54 54 54 54 54 1 56 1 58 58 58 1 62 62 62 62 62 1 1 1 1 67 67 67 67 1 72 72 "
                + "72 1 80 80 80 80 80 80 80 80 1 89 89 89 89 89 89 1 0 0 0 0 0 0 0 0 0 0 "
                + "0 0 0 0 0 0 0 1 54 54 54 54 54 54 1 1 58 58 58 1 62 62 62 62 62 1 68 68 1 67 67 67 67 1 72 "
                + "72 72 1 80 80 80 80 80 80 80 1 89 89 89 89 89 89 1 0 0 0 0 0 0 0 0 0 0 0 "
                + "0 0 0 0 0 0 0 0 1 54 54 54 54 54 54 1 58 58 58 1 62 62 62 62 62 1 68 68 1 67 67 67 67 1 72 72 "
                + "72 1 1 1 1 1 1 1 1 1 1 1 1 1 89 89 1 0 0 0 0 0 0 0 0 0 0 0 "
                + "0 0 0 0 0 0 0 0 0 1 1 1 54 54 54 1 58 58 58 1 62 62 62 62 62 1 68 68 68 1 1 1 1 1 1 1 72 1 76 "
                + "76 76 1 81 81 1 83 83 1 90 90 1 89 1 0 0 0 0 0 0 0 0 0 0 0 "
                + "0 0 0 0 0 0 0 0 0 0 0 0 1 54 54 1 58 58 58 1 62 62 1 1 1 1 68 68 68 68 68 68 68 68 68 1 1 1 1 "
                + "76 76 1 81 81 81 1 83 83 1 90 90 1 0 0 0 0 0 0 0 0 0 0 0 0 "
                + "0 0 0 0 0 0 0 0 0 0 0 0 0 1 54 1 58 58 1 1 1 1 68 68 68 68 68 68 68 68 68 68 68 68 68 1 73 73 "
                + "1 76 76 1 81 81 81 1 83 83 83 1 90 1 0 0 0 0 0 0 0 0 0 0 0 0 "
                + "0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 68 68 68 68 68 68 68 68 68 68 68 68 68 1 73 73 73 "
                + "1 1 1 81 81 81 1 83 83 83 83 1 0 0 0 0 0 0 0 0 0 0 0 0 0 "
                + "0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 68 68 68 68 68 68 68 68 68 68 68 68 68 1 73 73 73 "
                + "73 73 1 81 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 "
                + "0 0 1 50 50 50 50 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 68 68 68 68 68 68 68 68 68 68 68 68 1 73 1 1 "
                + "1 73 73 1 0 0 0 1 84 84 84 84 1 0 0 0 0 0 0 0 0 0 0 0 0 "
                + "0 0 0 1 50 50 50 50 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 68 68 68 68 68 1 1 68 68 68 68 68 68 1 0 0 "
                + "0 1 1 0 0 0 0 0 1 84 84 84 1 0 0 0 0 0 0 0 0 0 0 0 0 "
                + "0 0 1 50 50 50 50 50 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 68 68 68 1 0 0 1 68 68 68 68 1 0 0 0 0 0 "
                + "0 0 0 0 0 0 1 84 84 84 1 0 0 0 0 0 0 0 0 0 0 0 0 "
                + "0 0 0 1 50 50 50 50 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 68 68 1 0 0 0 1 68 68 68 68 1 0 0 0 0 0 0 "
                + "0 0 0 0 0 1 84 84 84 1 0 0 0 0 0 0 0 0 0 0 0 0 "
                + "0 0 1 50 50 50 50 50 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 0 0 0 0 0 1 68 68 68 1 0 0 0 0 0 0 0 "
                + "0 0 0 0 1 84 84 84 84 1 0 0 0 0 0 0 0 0 0 0 0 "
                + "0 0 1 50 50 50 50 50 1 0 0 0 0 0 0 1 51 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 68 68 1 0 0 0 0 0 0 0 "
                + "0 0 0 0 1 84 84 84 84 1 0 0 0 0 0 0 0 0 0 0 0 "
                + "0 0 0 1 50 50 50 50 1 0 0 0 0 0 0 0 1 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 1 68 1 0 0 0 0 0 0 0 0 "
                + "0 0 0 0 1 84 84 84 1 0 0 0 0 0 0 0 0 0 0 0 "
                + "0 0 0 0 1 50 1 1 50 1 0 0 0 0 0 0 0 0 1 51 51 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 "
                + "0 0 0 1 84 84 84 1 0 0 0 0 0 0 0 0 0 0 0 "
                + "0 0 0 1 50 1 0 0 1 50 1 0 0 0 0 0 0 0 0 1 1 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 "
                + "0 0 1 84 84 84 1 0 0 0 0 0 0 0 0 0 0 0 "
                + "0 0 1 50 1 0 0 0 0 1 50 1 0 0 0 0 0 0 0 0 0 0 1 51 51 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 "
                + "0 0 0 0 1 84 84 1 0 0 0 0 0 0 0 0 0 0 0 "
                + "0 0 0 1 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 "
                + "0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 "
                + "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 51 51 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 "
                + "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 "
                + "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 51 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 "
                + "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 "
                + "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 "
                + "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 "
                + "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 "
                + "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 "
                + "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 "
                + "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ";
    }

    static void save(int wins, int loses, StateStatus[][] stateDisplay) {
        String saveFile = wins + " " + loses + " ";
        for (int vertical = 0; vertical < 48; vertical++) {
            for (int horizontal = 0; horizontal < 64; horizontal++) {
                saveFile += stateDisplay[vertical][horizontal].stateStatusToInt() + " ";
            }
        }
        byte data[] = saveFile.getBytes();
        try (OutputStream out = new BufferedOutputStream(
                Files.newOutputStream(TrumpWillTriump.FILE, WRITE, TRUNCATE_EXISTING))) {
            out.write(data, 0, data.length);
        } catch (IOException x) {
            System.err.println("Error in SaveOrLoad.save: could not open or write to file.");
        }
    }
}
